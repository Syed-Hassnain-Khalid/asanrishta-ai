# Generated by Django 5.2.7 on 2025-10-21 13:19

import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('gender', models.CharField(blank=True, max_length=50, null=True)),
                ('date_of_birth', models.DateTimeField(blank=True, null=True)),
                ('religion', models.CharField(blank=True, max_length=50, null=True)),
                ('status', models.CharField(blank=True, max_length=50, null=True)),
                ('mobile_no', models.CharField(blank=True, max_length=50, null=True)),
                ('profile_createdby', models.IntegerField(blank=True, null=True)),
                ('marital_status', models.CharField(blank=True, max_length=50, null=True)),
                ('cast', models.CharField(blank=True, max_length=50, null=True)),
                ('height', models.CharField(blank=True, max_length=50, null=True)),
                ('education', models.CharField(blank=True, max_length=50, null=True)),
                ('city', models.IntegerField(blank=True, null=True)),
                ('occupation', models.CharField(blank=True, max_length=50, null=True)),
                ('terms', models.BooleanField(blank=True, null=True)),
                ('role_id', models.IntegerField(blank=True, null=True)),
                ('user_image', models.TextField(blank=True, null=True)),
                ('age', models.IntegerField(blank=True, null=True)),
                ('userKaTaruf', models.TextField(blank=True, null=True)),
                ('userDiWohtiKaTaruf', models.TextField(blank=True, null=True)),
                ('call_status', models.TextField(blank=True, null=True)),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_date', models.DateTimeField(auto_now=True, null=True)),
                ('subscribtionStatus', models.CharField(blank=True, max_length=50, null=True)),
                ('subscribtionExpire', models.DateTimeField(blank=True, null=True)),
                ('subscribtionDate', models.CharField(blank=True, max_length=50, null=True)),
                ('connections', models.IntegerField(blank=True, null=True)),
                ('connectionsDescription', models.TextField(blank=True, null=True)),
                ('tiktokLink', models.TextField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'db_table': 'Users',
            },
        ),
    ]
